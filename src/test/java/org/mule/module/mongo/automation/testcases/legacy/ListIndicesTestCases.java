/**
 * Copyright (c) MuleSoft, Inc. All rights reserved. http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.md file.
 */

package org.mule.module.mongo.automation.testcases.legacy;

import static org.junit.Assert.assertTrue;
import static org.junit.Assert.fail;

import java.util.List;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import org.junit.experimental.categories.Category;
import org.mule.module.mongo.api.IndexOrder;
import org.mule.module.mongo.api.automation.MongoHelper;
import org.mule.module.mongo.automation.MongoTestParent;
import org.mule.module.mongo.automation.RegressionTests;
import org.mule.module.mongo.automation.SmokeTests;
import org.mule.modules.tests.ConnectorTestUtils;

import com.mongodb.DBObject;

public class ListIndicesTestCases extends MongoTestParent {


	@Before
	public void setUp() throws Exception {
			initializeTestRunMessage("listIndices");
			runFlowAndGetPayload("create-collection");
			runFlowAndGetPayload("create-index");

	}
	

	@Category({SmokeTests.class, RegressionTests.class})
	@Test
	public void testListIndices() {
		try {
			String indexKey = getTestRunMessageValue("field").toString();
			IndexOrder indexOrder = (IndexOrder) getTestRunMessageValue("order");
			
			String indexName = indexKey + "_" + indexOrder.getValue();
			
			List<DBObject> payload = runFlowAndGetPayload("list-indices");
			assertTrue(payload != null);
			assertTrue(MongoHelper.indexExistsInList(payload, "_id_")); // Automatically generated by MongoDB
			assertTrue(MongoHelper.indexExistsInList(payload, indexName));

		} catch (Exception e) {
	         fail(ConnectorTestUtils.getStackTrace(e));
	    }
			
	}
	
	@After
	public void tearDown() throws Exception {
			String indexKey = getTestRunMessageValue("field").toString();
			IndexOrder indexOrder = (IndexOrder) getTestRunMessageValue("order");
			
			String indexName = indexKey + "_" + indexOrder.getValue();
			
			upsertOnTestRunMessage("index", indexName);
			
			runFlowAndGetPayload("drop-index");
			runFlowAndGetPayload("drop-collection");

	}
	
}
