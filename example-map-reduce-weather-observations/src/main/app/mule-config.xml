<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule Mongo Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->

<mule xmlns="http://www.mulesoft.org/schema/mule/core" 
  xmlns:mongo="http://www.mulesoft.org/schema/mule/mongo"
  xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:spring="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.mulesoft.org/schema/mule/mongo http://www.mulesoft.org/schema/mule/mongo/1.0/mule-mongo.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.mulesoft.org/schema/mule/json    http://www.mulesoft.org/schema/mule/json/3.1/mule-json.xsd
       http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd">
       

  <mongo:config name="mongo" />
  
  <flow name="AddIcaoToSession">
    <message-properties-transformer scope="session">
      <add-message-property key="cityIcao"
        value="#[header:inbound:cityIcao]" />
    </message-properties-transformer>
  </flow>

  <flow name="AddWeatherObservation">
    <http:inbound-endpoint host="localhost" port="9091"
      path="mongo-demo-add-weater-observation" />
    <flow-ref name="AddIcaoToSession"/>
    <http:outbound-endpoint host="ws.geonames.org"
      port="80" path="weatherIcaoJSON?ICAO=#[header:session:cityIcao]" />
    <mongo:insert-object collection="weatherObservations" element="#[json:weatherObservation]" config-ref="mongo" />
    <expression-transformer>
      <return-argument expression="Successfully added a weather observation" evaluator="string"/>
    </expression-transformer>
  </flow>
  
  <flow name="GetAverageTemperature">
    <http:inbound-endpoint host="localhost" port="9091"
      path="mongo-demo-get-average-temperature" />
    <flow-ref name="AddIcaoToSession"/>
    <mongo:map-reduce-objects
      collection="weatherObservations"  
      mapFunction='function(){ emit(this.ICAO, parseFloat(this.temperature) ); }' 
      reduceFunction='function(key, values) {          
            return values.reduce(function(a,e) { return a + e }) / values.length;    
          }'
          outputCollection="weatherStats" config-ref="mongo" />
      <mongo:find-one-object collection="weatherStats" config-ref="mongo" >
        <mongo:queryAttributes>
          <mongo:queryAttribute key="_id" value="#[header:session:cityIcao]"/>
        </mongo:queryAttributes>
      </mongo:find-one-object>
      <expression-transformer>
      <return-argument expression="payload.get('value').toString()" evaluator="groovy"/>
    </expression-transformer>
  </flow>
</mule>